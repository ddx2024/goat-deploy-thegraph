// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ChangeValidatorOwner extends ethereum.Event {
  get params(): ChangeValidatorOwner__Params {
    return new ChangeValidatorOwner__Params(this);
  }
}

export class ChangeValidatorOwner__Params {
  _event: ChangeValidatorOwner;

  constructor(event: ChangeValidatorOwner) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Claim extends ethereum.Event {
  get params(): Claim__Params {
    return new Claim__Params(this);
  }
}

export class Claim__Params {
  _event: Claim;

  constructor(event: Claim) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get validator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class CompleteUnlock extends ethereum.Event {
  get params(): CompleteUnlock__Params {
    return new CompleteUnlock__Params(this);
  }
}

export class CompleteUnlock__Params {
  _event: CompleteUnlock;

  constructor(event: CompleteUnlock) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Create extends ethereum.Event {
  get params(): Create__Params {
    return new Create__Params(this);
  }
}

export class Create__Params {
  _event: Create;

  constructor(event: Create) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pubkey(): Array<Bytes> {
    return this._event.parameters[2].value.toBytesArray();
  }
}

export class DistributeReward extends ethereum.Event {
  get params(): DistributeReward__Params {
    return new DistributeReward__Params(this);
  }
}

export class DistributeReward__Params {
  _event: DistributeReward;

  constructor(event: DistributeReward) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get goat(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get gas(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Grant extends ethereum.Event {
  get params(): Grant__Params {
    return new Grant__Params(this);
  }
}

export class Grant__Params {
  _event: Grant;

  constructor(event: Grant) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Lock extends ethereum.Event {
  get params(): Lock__Params {
    return new Lock__Params(this);
  }
}

export class Lock__Params {
  _event: Lock;

  constructor(event: Lock) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OpenCliam extends ethereum.Event {
  get params(): OpenCliam__Params {
    return new OpenCliam__Params(this);
  }
}

export class OpenCliam__Params {
  _event: OpenCliam;

  constructor(event: OpenCliam) {
    this._event = event;
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unlock extends ethereum.Event {
  get params(): Unlock__Params {
    return new Unlock__Params(this);
  }
}

export class Unlock__Params {
  _event: Unlock;

  constructor(event: Unlock) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get validator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class UpdateTokenLimit extends ethereum.Event {
  get params(): UpdateTokenLimit__Params {
    return new UpdateTokenLimit__Params(this);
  }
}

export class UpdateTokenLimit__Params {
  _event: UpdateTokenLimit;

  constructor(event: UpdateTokenLimit) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get limit(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateTokenThreshold extends ethereum.Event {
  get params(): UpdateTokenThreshold__Params {
    return new UpdateTokenThreshold__Params(this);
  }
}

export class UpdateTokenThreshold__Params {
  _event: UpdateTokenThreshold;

  constructor(event: UpdateTokenThreshold) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateTokenWeight extends ethereum.Event {
  get params(): UpdateTokenWeight__Params {
    return new UpdateTokenWeight__Params(this);
  }
}

export class UpdateTokenWeight__Params {
  _event: UpdateTokenWeight;

  constructor(event: UpdateTokenWeight) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get weight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Locking__creationThresholdResultValue0Struct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class Locking__getAddressByPubkeyResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }
}

export class Locking__tokensResult {
  value0: boolean;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: boolean, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getExist(): boolean {
    return this.value0;
  }

  getWeight(): BigInt {
    return this.value1;
  }

  getLimit(): BigInt {
    return this.value2;
  }

  getThreshold(): BigInt {
    return this.value3;
  }
}

export class Locking extends ethereum.SmartContract {
  static bind(address: Address): Locking {
    return new Locking("Locking", address);
  }

  MAX_TOKEN_SIZE(): BigInt {
    let result = super.call("MAX_TOKEN_SIZE", "MAX_TOKEN_SIZE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_TOKEN_SIZE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_TOKEN_SIZE",
      "MAX_TOKEN_SIZE():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_WEIGHT(): BigInt {
    let result = super.call("MAX_WEIGHT", "MAX_WEIGHT():(uint64)", []);

    return result[0].toBigInt();
  }

  try_MAX_WEIGHT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_WEIGHT", "MAX_WEIGHT():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  REQUEST_PER_BLOCK(): BigInt {
    let result = super.call(
      "REQUEST_PER_BLOCK",
      "REQUEST_PER_BLOCK():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_REQUEST_PER_BLOCK(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "REQUEST_PER_BLOCK",
      "REQUEST_PER_BLOCK():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimable(): boolean {
    let result = super.call("claimable", "claimable():(bool)", []);

    return result[0].toBoolean();
  }

  try_claimable(): ethereum.CallResult<boolean> {
    let result = super.tryCall("claimable", "claimable():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  creationThreshold(): Array<Locking__creationThresholdResultValue0Struct> {
    let result = super.call(
      "creationThreshold",
      "creationThreshold():((address,uint256)[])",
      [],
    );

    return result[0].toTupleArray<Locking__creationThresholdResultValue0Struct>();
  }

  try_creationThreshold(): ethereum.CallResult<
    Array<Locking__creationThresholdResultValue0Struct>
  > {
    let result = super.tryCall(
      "creationThreshold",
      "creationThreshold():((address,uint256)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Locking__creationThresholdResultValue0Struct>(),
    );
  }

  getAddressByPubkey(pubkey: Array<Bytes>): Locking__getAddressByPubkeyResult {
    let result = super.call(
      "getAddressByPubkey",
      "getAddressByPubkey(bytes32[2]):(address,address)",
      [ethereum.Value.fromFixedBytesArray(pubkey)],
    );

    return new Locking__getAddressByPubkeyResult(
      result[0].toAddress(),
      result[1].toAddress(),
    );
  }

  try_getAddressByPubkey(
    pubkey: Array<Bytes>,
  ): ethereum.CallResult<Locking__getAddressByPubkeyResult> {
    let result = super.tryCall(
      "getAddressByPubkey",
      "getAddressByPubkey(bytes32[2]):(address,address)",
      [ethereum.Value.fromFixedBytesArray(pubkey)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Locking__getAddressByPubkeyResult(
        value[0].toAddress(),
        value[1].toAddress(),
      ),
    );
  }

  goatToken(): Address {
    let result = super.call("goatToken", "goatToken():(address)", []);

    return result[0].toAddress();
  }

  try_goatToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("goatToken", "goatToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  locking(validator: Address, token: Address): BigInt {
    let result = super.call("locking", "locking(address,address):(uint256)", [
      ethereum.Value.fromAddress(validator),
      ethereum.Value.fromAddress(token),
    ]);

    return result[0].toBigInt();
  }

  try_locking(validator: Address, token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "locking",
      "locking(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(validator),
        ethereum.Value.fromAddress(token),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owners(validator: Address): Address {
    let result = super.call("owners", "owners(address):(address)", [
      ethereum.Value.fromAddress(validator),
    ]);

    return result[0].toAddress();
  }

  try_owners(validator: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("owners", "owners(address):(address)", [
      ethereum.Value.fromAddress(validator),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  remainReward(): BigInt {
    let result = super.call("remainReward", "remainReward():(uint256)", []);

    return result[0].toBigInt();
  }

  try_remainReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("remainReward", "remainReward():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokens(token: Address): Locking__tokensResult {
    let result = super.call(
      "tokens",
      "tokens(address):(bool,uint64,uint256,uint256)",
      [ethereum.Value.fromAddress(token)],
    );

    return new Locking__tokensResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_tokens(token: Address): ethereum.CallResult<Locking__tokensResult> {
    let result = super.tryCall(
      "tokens",
      "tokens(address):(bool,uint64,uint256,uint256)",
      [ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Locking__tokensResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  totalLocking(token: Address): BigInt {
    let result = super.call("totalLocking", "totalLocking(address):(uint256)", [
      ethereum.Value.fromAddress(token),
    ]);

    return result[0].toBigInt();
  }

  try_totalLocking(token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalLocking",
      "totalLocking(address):(uint256)",
      [ethereum.Value.fromAddress(token)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unclaimed(owner: Address): BigInt {
    let result = super.call("unclaimed", "unclaimed(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toBigInt();
  }

  try_unclaimed(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("unclaimed", "unclaimed(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get goat(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get totalReward(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTokenCall extends ethereum.Call {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get weight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get limit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get thrs(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class ChangeValidatorOwnerCall extends ethereum.Call {
  get inputs(): ChangeValidatorOwnerCall__Inputs {
    return new ChangeValidatorOwnerCall__Inputs(this);
  }

  get outputs(): ChangeValidatorOwnerCall__Outputs {
    return new ChangeValidatorOwnerCall__Outputs(this);
  }
}

export class ChangeValidatorOwnerCall__Inputs {
  _call: ChangeValidatorOwnerCall;

  constructor(call: ChangeValidatorOwnerCall) {
    this._call = call;
  }

  get validator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangeValidatorOwnerCall__Outputs {
  _call: ChangeValidatorOwnerCall;

  constructor(call: ChangeValidatorOwnerCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get validator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class CompleteUnlockCall extends ethereum.Call {
  get inputs(): CompleteUnlockCall__Inputs {
    return new CompleteUnlockCall__Inputs(this);
  }

  get outputs(): CompleteUnlockCall__Outputs {
    return new CompleteUnlockCall__Outputs(this);
  }
}

export class CompleteUnlockCall__Inputs {
  _call: CompleteUnlockCall;

  constructor(call: CompleteUnlockCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CompleteUnlockCall__Outputs {
  _call: CompleteUnlockCall;

  constructor(call: CompleteUnlockCall) {
    this._call = call;
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get pubkey(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get sigR(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get sigS(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get sigV(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }
}

export class DistributeRewardCall extends ethereum.Call {
  get inputs(): DistributeRewardCall__Inputs {
    return new DistributeRewardCall__Inputs(this);
  }

  get outputs(): DistributeRewardCall__Outputs {
    return new DistributeRewardCall__Outputs(this);
  }
}

export class DistributeRewardCall__Inputs {
  _call: DistributeRewardCall;

  constructor(call: DistributeRewardCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get goat(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get gasReward(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DistributeRewardCall__Outputs {
  _call: DistributeRewardCall;

  constructor(call: DistributeRewardCall) {
    this._call = call;
  }
}

export class GrantCall extends ethereum.Call {
  get inputs(): GrantCall__Inputs {
    return new GrantCall__Inputs(this);
  }

  get outputs(): GrantCall__Outputs {
    return new GrantCall__Outputs(this);
  }
}

export class GrantCall__Inputs {
  _call: GrantCall;

  constructor(call: GrantCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class GrantCall__Outputs {
  _call: GrantCall;

  constructor(call: GrantCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get validator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get values(): Array<LockCallValuesStruct> {
    return this._call.inputValues[1].value.toTupleArray<LockCallValuesStruct>();
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class LockCallValuesStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class OpenClaimCall extends ethereum.Call {
  get inputs(): OpenClaimCall__Inputs {
    return new OpenClaimCall__Inputs(this);
  }

  get outputs(): OpenClaimCall__Outputs {
    return new OpenClaimCall__Outputs(this);
  }
}

export class OpenClaimCall__Inputs {
  _call: OpenClaimCall;

  constructor(call: OpenClaimCall) {
    this._call = call;
  }
}

export class OpenClaimCall__Outputs {
  _call: OpenClaimCall;

  constructor(call: OpenClaimCall) {
    this._call = call;
  }
}

export class ReclaimCall extends ethereum.Call {
  get inputs(): ReclaimCall__Inputs {
    return new ReclaimCall__Inputs(this);
  }

  get outputs(): ReclaimCall__Outputs {
    return new ReclaimCall__Outputs(this);
  }
}

export class ReclaimCall__Inputs {
  _call: ReclaimCall;

  constructor(call: ReclaimCall) {
    this._call = call;
  }
}

export class ReclaimCall__Outputs {
  _call: ReclaimCall;

  constructor(call: ReclaimCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetThresholdCall extends ethereum.Call {
  get inputs(): SetThresholdCall__Inputs {
    return new SetThresholdCall__Inputs(this);
  }

  get outputs(): SetThresholdCall__Outputs {
    return new SetThresholdCall__Outputs(this);
  }
}

export class SetThresholdCall__Inputs {
  _call: SetThresholdCall;

  constructor(call: SetThresholdCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetThresholdCall__Outputs {
  _call: SetThresholdCall;

  constructor(call: SetThresholdCall) {
    this._call = call;
  }
}

export class SetTokenLimitCall extends ethereum.Call {
  get inputs(): SetTokenLimitCall__Inputs {
    return new SetTokenLimitCall__Inputs(this);
  }

  get outputs(): SetTokenLimitCall__Outputs {
    return new SetTokenLimitCall__Outputs(this);
  }
}

export class SetTokenLimitCall__Inputs {
  _call: SetTokenLimitCall;

  constructor(call: SetTokenLimitCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get limit(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetTokenLimitCall__Outputs {
  _call: SetTokenLimitCall;

  constructor(call: SetTokenLimitCall) {
    this._call = call;
  }
}

export class SetTokenWeightCall extends ethereum.Call {
  get inputs(): SetTokenWeightCall__Inputs {
    return new SetTokenWeightCall__Inputs(this);
  }

  get outputs(): SetTokenWeightCall__Outputs {
    return new SetTokenWeightCall__Outputs(this);
  }
}

export class SetTokenWeightCall__Inputs {
  _call: SetTokenWeightCall;

  constructor(call: SetTokenWeightCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get weight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetTokenWeightCall__Outputs {
  _call: SetTokenWeightCall;

  constructor(call: SetTokenWeightCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get validator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get values(): Array<UnlockCallValuesStruct> {
    return this._call.inputValues[2].value.toTupleArray<UnlockCallValuesStruct>();
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class UnlockCallValuesStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}
